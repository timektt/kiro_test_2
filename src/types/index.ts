// Database types (will be generated by Prisma)
export type User = {
  id: string
  username: string
  email: string
  name: string | null
  image: string | null
  bio: string | null
  socialLinks: Record<string, string> | null
  role: "USER" | "ADMIN" | "MODERATOR"
  isActive: boolean
  createdAt: Date
  updatedAt: Date
  mbti?: MBTI | null
  _count?: {
    posts: number
    followers: number
    following: number
    likes: number
    comments: number
  }
}

export type MBTI = {
  id: string
  type: MBTIType
  description: string | null
  userId: string
  assignedAt: Date
  isLocked: boolean
}

export type MBTIType = 
  | "INTJ" | "INTP" | "ENTJ" | "ENTP"
  | "INFJ" | "INFP" | "ENFJ" | "ENFP"
  | "ISTJ" | "ISFJ" | "ESTJ" | "ESFJ"
  | "ISTP" | "ISFP" | "ESTP" | "ESFP"

export type Post = {
  id: string
  content: string
  imageUrl: string | null
  authorId: string
  isPublic: boolean
  createdAt: Date
  updatedAt: Date
  author: User
  _count?: {
    likes: number
    comments: number
  }
}

export type Comment = {
  id: string
  content: string
  postId: string
  authorId: string
  createdAt: Date
  updatedAt: Date
  author: User
}

export type Like = {
  id: string
  postId: string
  userId: string
  createdAt: Date
}

export type Follow = {
  id: string
  followerId: string
  followingId: string
  createdAt: Date
}

export type Notification = {
  id: string
  type: "LIKE" | "COMMENT" | "FOLLOW" | "MENTION" | "SYSTEM"
  message: string
  read: boolean
  userId: string
  relatedId: string | null
  createdAt: Date
}

export type Ranking = {
  id: string
  userId: string
  type: RankingType
  score: number
  rank: number | null
  period: string
  calculatedAt: Date
  updatedAt: Date
  user?: User
}

export type RankingType = 
  | "POSTS_LIKES"
  | "POSTS_COUNT"
  | "COMMENTS_COUNT"
  | "FOLLOWERS_COUNT"
  | "ENGAGEMENT"
  | "WEEKLY_ACTIVE"
  | "MONTHLY_ACTIVE"

// UI State types
export type Theme = "light" | "dark"

export type NotificationState = {
  notifications: Notification[]
  unreadCount: number
  isLoading: boolean
}

export type FeedState = {
  posts: Post[]
  isLoading: boolean
  hasMore: boolean
  page: number
}

// API Response types
export type ApiResponse<T> = {
  success: boolean
  data?: T
  error?: {
    code: string
    message: string
    details?: any
  }
}

